{"version":3,"file":"sails.model.js","sourceRoot":"","sources":["../src/sails.model.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;;IAEnC;QAEgB,OAAE,GAAgB,IAAI,CAAC;IAkDvC,CAAC;mBAnDqB,UAAU;IAK5B,gCAAW,GAAX;QACI,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAEM,oBAAS,GAAhB,UAAgD,KAAQ;QACpD,IAAM,IAAI,GAAG,UAAC,GAAG;YACb,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;gBACnB,IAAM,IAAI,GAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzB,qBAAqB;gBACrB,IAAI,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;oBAC7C,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;iBACnB;gBAED,sDAAsD;gBACtD,IAAI,IAAI,IAAI,IAAI,YAAY,YAAU,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE;oBACxD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;iBACtB;gBAED,IAAI,IAAI,IAAI,IAAI,YAAY,YAAU,EAAE;oBACpC,GAAG,CAAC,GAAG,CAAC,GAAG,YAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBACzC;gBAED,IAAI,IAAI,IAAI,IAAI,YAAY,KAAK,EAAE;oBAC/B,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,EAAE;wBAClB,IAAI,EAAE,YAAY,YAAU,EAAE;4BAC1B,OAAO,YAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;yBACnC;wBAED,OAAO,EAAE,CAAC;oBACd,CAAC,CAAC,CAAC;iBACN;aACJ;YACD,OAAO,GAAG,CAAC;QACf,CAAC,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEM,sBAAW,GAAlB,UAAkD,UAAU,EAAE,IAAa;QACvE,IAAM,MAAM,GAAG,UAAC,KAAK,IAAK,OAAA,WAAW,CAAI,UAAU,EAAE,KAAK,CAAM,EAAtC,CAAsC,CAAC;QACjE,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC3B;aAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,MAAM,IAAI,KAAK,CAAC,4GAA4G,CAAC,CAAC;IAClI,CAAC;;IAjDW;QAAX,QAAQ,EAAE;;0CAAwB;IACT;QAAzB,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;kCAAY,IAAI;iDAAC;IAChB;QAAzB,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;kCAAY,IAAI;iDAAC;IAHxB,UAAU;QAD/B,QAAQ,EAAE;OACW,UAAU,CAmD/B;IAAD,iBAAC;CAAA,IAAA;SAnDqB,UAAU","sourcesContent":["import { Property, unserialize } from \"./sails.serialize\";\nimport { SailsModelInterface } from \"./sails.model.interface\";\nimport { Endpoint } from \"./sails.decorator.endpoint\";\nimport { isObject } from \"./utils\";\n\n@Endpoint()\nexport abstract class SailsModel implements SailsModelInterface {\n    @Property() id: string|null = null;\n    @Property({ type: Date }) createdAt: Date;\n    @Property({ type: Date }) updatedAt: Date;\n\n    getEndPoint(): string {\n        return this.getEndPoint();\n    }\n\n    static serialize<U extends SailsModelInterface>(model: U): U {\n        const recr = (obj) => {\n            for (const key in obj) {\n                const prop: U = obj[key];\n                // Ignore NULL values\n                if (prop === null || typeof prop === \"function\") {\n                    delete obj[key];\n                }\n\n                // Convert Property Models to their ID representations\n                if (prop && prop instanceof SailsModel && prop.id !== null) {\n                    obj[key] = prop.id;\n                }\n\n                if (prop && prop instanceof SailsModel) {\n                    obj[key] = SailsModel.serialize(prop);\n                }\n\n                if (prop && prop instanceof Array) {\n                    obj[key] = prop.map(ob => {\n                        if (ob instanceof SailsModel) {\n                            return SailsModel.serialize(ob);\n                        }\n\n                        return ob;\n                    });\n                }\n            }\n            return obj;\n        };\n        return recr(Object.assign({}, model));\n    }\n\n    static unserialize<U extends SailsModelInterface>(modelClazz, data: U | U[]): U | U[] {\n        const callFn = (model) => unserialize<U>(modelClazz, model) as U;\n        if (Array.isArray(data)) {\n            return data.map(callFn);\n        } else if (isObject(data)) {\n            return callFn(data);\n        }\n        throw new Error(\"SailsModel.unserialize requires a data parameter of either a Literal Object or an Array of Literal Objects\");\n    }\n}\n"]}